generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(cuid())
  wallet_address String     @unique
  username       String?    @unique
  created_at     DateTime   @default(now()) @map("created_at")
  updated_at     DateTime   @updatedAt @map("updated_at")
  avatar_url     String?
  bio            String?
  display_name   String?
  joined_date    DateTime   @default(now()) @map("joined_date")
  purchases      Purchase[] @relation("VideoPurchaser")

  @@map("users")
}

model Video {
  id             String     @id @default(cuid())
  title          String
  description    String?
  youtube_url    String
  thumbnail_url  String?
  sol_price      Float      @default(0)
  is_paid        Boolean    @default(false)
  is_live        Boolean    @default(false)
  wallet_address String
  created_at     DateTime   @default(now()) @map("created_at")
  updated_at     DateTime   @updatedAt @map("updated_at")
  purchases      Purchase[] @relation("VideoPurchases")

  @@map("videos")
}

model Purchase {
  id                     String    @id @default(cuid())
  video_id               String
  buyer_wallet_address   String
  creator_wallet_address String
  amount_paid            BigInt // Amount paid in lamports
  platform_fee           BigInt // Platform fee in lamports
  creator_payout         BigInt // Creator payout in lamports
  transaction_signature  String    @unique
  status                 String    @default("completed") // completed, pending, failed
  block_number           Int?
  created_at             DateTime  @default(now()) @map("created_at")
  completed_at           DateTime? @map("completed_at")

  // Relations
  buyer_id String?
  buyer    User?   @relation("VideoPurchaser", fields: [buyer_id], references: [id], onDelete: SetNull)
  video    Video   @relation("VideoPurchases", fields: [video_id], references: [id], onDelete: Cascade)

  @@unique([video_id, buyer_wallet_address])
  @@map("purchases")
}
